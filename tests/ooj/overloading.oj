// fails
// TYPE_MISMATCH
// NON_VOID_RETURN
// VARIABLE_MIGHT_NOT_HAVE_BEEN_INITIALIZED



package test;

class A extends java.lang.Object {
  public A() {}

  boolean equals(java.lang.Object obj) {
    return true;
  }

  int m () {
    return 1;
  }
}

class B extends java.lang.Object {
  public B() {}
  public B(int k) {}
  double f () {
    return 1.2;
  }
}

class Test1 extends java.lang.Object {
  public Test1() {}
  boolean equals(java.lang.Object obj) {
    return true;
  }
}

class Test extends Test1 {

  /* private */
  private A k(int i) {
    new B(3);
    return new A();
  }

  /* private */
  B k(boolean b) {
    return new B();
  }


  int test() {
    return k(true).f(); // fails
  }

  void test(int m) {
    super.equals(null);
    // these should work
    equals(null);
    // This should fail
    // Object obj;
    java.lang.Object obj;
    super.equals(obj); // fails
    super.equals(new Test2());
    equals(new Test2());
    this.k(1).m();
  }

  // TODO: Test this method later
  void test2(int m) {
    return k(1).m(); // fails
  }
}


class Test2 extends Test {
  // this should work, but it doesn't
  public Test2() {}
  final int w = 20;
  private void d() {
    byte x = 2;
    boolean flag = true;
    boolean y = r(flag?x:w);
    boolean z = r(flag?w:x);
    boolean a = r(x);
    super.test();
  }


  boolean r(byte k) {
    return true;
  }

  short r(int k) {
    return 2;
  }
}

