// fails
// CONSTRUCTOR_CANNOT_BE_ABSTRACT
// ABSTRACT_METHOD_CANNOT_HAVE_BODY
// INSTANTIATING_NON_CONCRETE_CLASS
// INSTANTIATING_NON_CONCRETE_CLASS
// ABSTRACT_METHOD_IN_CONCRETE_CLASS
// NON_IMPLEMENTED_METHODS


interface K {
  // K () {}   // fails
  int m();
}

class Kimpl implements K {
  java.lang.Object obj = new java.lang.Object();
  int m() {
    return 1;
  }
}

interface A {
  int a;          // (FUTURE) fails, (not initialized)
  static int b;   // (FUTURE)  fails, (not initialized)
  final static int c = 2;
  // int m() { // this should fail
  //   return 1;
  // }
  abstract int m();
  abstract int n();
}


abstract class B {
  abstract B () {} // fails

  abstract int m();
  abstract int n() { // fails
    return 1;
  }
}
class Test implements A { // fails
  Test () {}
  void main() {
    int k = A.a;
    k = A.b;
    k = A.c;
    new B(); // fail
    new A(); // fail
    // new A(){}.k;
  }
  abstract int m(); // fails
}



class D extends Kimpl {
}


class VV extends D {
  boolean n() {
    return obj.equals(null);
  }
}



interface ATest {
  void b();
}


abstract class BTest implements ATest {
  void b() {}
  void a();
}

class CTest extends BTest {
  void a() {}
}


